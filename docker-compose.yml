services:

  # minecraft:
  #   image: itzg/minecraft-server
  #   container_name: minecraft
  #   tty: true
  #   stdin_open: true
  #   ports:
  #     - "25565:25565"
  #   environment:
  #     UID: ${PUID}
  #     GID: ${PGID}
  #     TZ: ${TZ}
  #     EULA: "TRUE"
  #     MOTD: "jff.sh Minecrat server"
  #     DIFFICULTY: hard
  #     MAX_PLAYERS: 10
  #     VIEW_DISTANCE: 32
  #     ONLINE_MODE: FALSE
  #     SERVER_NAME: "jff.sh"
  #     MEMORY: 4G
  #     USE_AIKAR_FLAGS: true
  #   volumes:
  #     - ${DATADIR}/minecraft/data:/data

  actual-server:
    image: actualbudget/actual-server:latest
    container_name: actual-server
    restart: unless-stopped
    ports:
      - '5006:5006'
    volumes:
      - ${DATADIR}/actual-server/data:/data

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    network_mode: host
    privileged: true
    depends_on:
      - homeassistant-openwakeword
      - homeassistant-whisper
      - homeassistant-piper
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ${DATADIR}/homeassistant/config:/config
      - /run/dbus:/run/dbus:ro


  homeassistant-piper:
    image: rhasspy/wyoming-piper
    container_name: homeassistant-piper
    volumes:
      - ${DATADIR}/homeassistant-piper/data:/data
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --voice en_US-lessac-medium
    ports:
      - 10200:10200

  homeassistant-whisper:
    image: rhasspy/wyoming-whisper
    container_name: homeassistant-whisper
    volumes:
      - ${DATADIR}/homeassistant-whisper/data:/data
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --model base-int8 --language pt # tiny base small medium large

    ports:
      - 10300:10300

  homeassistant-openwakeword:
    image: rhasspy/wyoming-openwakeword
    container_name: homeassistant-openwakeword
    volumes:
      - ${DATADIR}/homeassistant-openwakeword/config:/config
      - ${DATADIR}/homeassistant-openwakeword/data:/data
      - ${DATADIR}/homeassistant-openwakeword/custom:/custom
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --preload-model 'hey_jarvis' --custom-model-dir /custom
    ports:
      - 10400:10400

  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - ${DATADIR}/homer/assets:/www/assets
    ports:
      - 8084:8080
    user: ${PUID}:${PGID}

  mapper:
    image: josefilipeferreira/mapper:master
    container_name: mapper
    environment:
      IMAGE_RATIO: 1.6
    volumes:
      - ${DATADIR}/mapper/cache:/cache
      - ${DATADIR}/mapper/export:/export
      - ~/phone:/images:ro

  wg-easier:
    image: josefilipeferreira/wg-easier
    container_name: wg-easier
    environment:
      WG_HOST: vpn.${WEBSITE}
      PASSWORD_FILE: /password
    volumes:
      - ${DATADIR}/wg-easier/config:/etc/wireguard
      - ${DATADIR}/wg-easier/password:/password
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  qbittorrent:
    image: linuxserver/qbittorrent:4.5.2
    container_name: qbittorrent
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      WEBUI_PORT: 8090
    volumes:
      - ${MEDIADIR}:/media
      - ${DLDIR}:/downloads
      - ${DATADIR}/qbittorrent/autodl:/autodl
      - ${DATADIR}/qbittorrent/config:/config
    ports:
      - 8090:8090
      - 65432:65432
      - 65432:65432/udp
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      VERSION: docker
    group_add:
      - "989"
    network_mode: host
    volumes:
      - ~/.local/share/music:/music
      - ${MEDIADIR}:/media
      - ${DATADIR}/jellyfin/cache:/cache
      - ${DATADIR}/jellyfin/config:/config
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      - gotify
    restart: unless-stopped

  jellystat-postgres:
    image: postgres:15.2
    container_name: jellystat-postgres
    environment:
      POSTGRES_DB: 'jfstat'
      POSTGRES_USER: ${JELLYSTAT_DB_USER}
      POSTGRES_PASSWORD: ${JELLYSTAT_DB_PASSWORD}
    volumes:
      - ${DATADIR}/jellystat-postgres/data:/var/lib/postgresql/data
    restart: unless-stopped

  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    environment:
      POSTGRES_USER: ${JELLYSTAT_DB_USER}
      POSTGRES_PASSWORD: ${JELLYSTAT_DB_PASSWORD}
      POSTGRES_IP: jellystat-postgres
      POSTGRES_PORT: 5432
      JWT_SECRET: ${JELLYSTAT_JWT_SECRET}
      TZ: ${TZ}
    ports:
      - "3000:3000"
    volumes:
      - ${DATADIR}/jellystat/data:/app/backend/backup-data
    depends_on:
      - jellystat-postgres
      - jellyfin
    restart: unless-stopped

  iron-cake:
    image: josefilipeferreira/iron-cake:master
    container_name: iron-cake
    ports:
      - "8000:8000"
    volumes:
      - ${DATADIR}/iron-cake/thumb:/thumb
      - ${MEDIADIR}/anime:/anime:ro
      - ~/.local/share/music:/music:ro
      - ~/.local/share/wallpapers:/walls:ro
      - ~/share:/share:ro
      - ~/repos/receitas/receitas:/receitas:ro
    restart: unless-stopped

  jbb:
    image: josefilipeferreira/jbb.py:master
    container_name: jbb
    volumes:
      - ${DATADIR}/jbb/config.yaml:/config.yaml
      - ${DATADIR}/jbb/db:/db
      - ${DATADIR}/jbb/media:/media
      - ${DATADIR}/jbb/music:/music
    restart: unless-stopped

  radicale:
    image: josefilipeferreira/docker-radicale:master
    container_name: radicale
    ports:
      - "5232:5232"
    volumes:
      - ~/.gitconfig:/etc/gitconfig
      - ${DATADIR}/radicale/users:/users
      - ${DATADIR}/radicale/collections:/collections
      - ${DATADIR}/radicale/config:/config
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr
    container_name: flaresolverr
    environment:
      TZ: ${TZ}
    ports:
      - 8191:8191
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DATADIR}/prowlarr/config:/config
    ports:
      - 9696:9696
    depends_on:
      - flaresolverr
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: 022 #optional
    volumes:
      - ${MEDIADIR}:/media
      - ${DLDIR}:/downloads
      - ${DATADIR}/sonarr/config:/config
    ports:
      - 8989:8989
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${MEDIADIR}/movies:/movies
      - ${DLDIR}:/downloads
      - ${DATADIR}/radarr/config:/config
    ports:
      - 7878:7878
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  calibre-web:
    image: linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      DOCKER_MODS: linuxserver/mods:universal-calibre
      OAUTHLIB_RELAX_TOKEN_SCOPE: 1
    volumes:
      - ${DATADIR}/calibre-web/config:/config
      - ${DATADIR}/calibre/config/Calibre Library:/books
    ports:
      - 8083:8083
    depends_on:
      - calibre
    restart: unless-stopped

  calibre:
    image: linuxserver/calibre:latest
    container_name: calibre
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DATADIR}/calibre/config:/config
      - ${DATADIR}/calibre/import:/import
    ports:
      - 8082:8080
      - 8081:8081
    restart: unless-stopped

  paperless-redis:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    restart: unless-stopped
    volumes:
      - ${DATADIR}/paperless-redis/data:/data

  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-ngx
    restart: unless-stopped
    ports:
      - 9090:8000
    volumes:
      - ${DATADIR}/paperless/data:/usr/src/paperless/data
      - ${DATADIR}/paperless/media:/usr/src/paperless/media
      - ${DATADIR}/paperless/export:/usr/src/paperless/export
      - ${DATADIR}/paperless/consume:/usr/src/paperless/consume
    depends_on:
      - paperless-redis
      - gotenberg
      - tika
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      USERMAP_UID: ${PUID}
      USERMAP_GID: ${PGID}
      PAPERLESS_URL: https://${WEBSITE}
      PAPERLESS_FORCE_SCRIPT_NAME: /paperless
      PAPERLESS_STATIC_URL: /paperless/static/
      PAPERLESS_OCR_LANGUAGES: por eng
      PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      USE_X_FORWARD_HOST: true
      USE_X_FORWARD_PORT: true
      PAPERLESS_TIME_ZONE: ${TZ}
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998


  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    container_name: gotenberg
    restart: unless-stopped

    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    container_name: tika
    restart: unless-stopped

  stirling-pdf:
    image: frooodle/s-pdf:latest
    container_name: stirling-pdf
    ports:
      - 9091:8080
    volumes:
      - ${DATADIR}/stirling-pdf/trainingData:/usr/share/tesseract-ocr/5/tessdata
      - ${DATADIR}/stirling-pdf/configs:/configs
    environment:
      DOCKER_ENABLE_SECURITY: false
      SYSTEM_ROOTURIPATH: /pdf

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    restart: unless-stopped
    stop_grace_period: 10s
    depends_on:
      - photoprism-mariadb
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342"
    environment:
      PHOTOPRISM_ADMIN_USER: ${PHOTOPRISM_ADMIN_USER}
      PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD}
      PHOTOPRISM_AUTH_MODE: "password"
      PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_DISABLE_TLS: "false"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
      PHOTOPRISM_DEFAULT_TLS: "true"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
      PHOTOPRISM_ORIGINALS_LIMIT: 10000
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"
      PHOTOPRISM_READONLY: "true"
      PHOTOPRISM_EXPERIMENTAL: "true"
      PHOTOPRISM_DISABLE_CHOWN: "true"
      PHOTOPRISM_DISABLE_WEBDAV: "true"
      PHOTOPRISM_JPEG_QUALITY: 90
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_SERVER: "photoprism-mariadb:3306"
      PHOTOPRISM_DATABASE_NAME: ${PHOTOPRISM_MARIADB_DATABASE}
      PHOTOPRISM_DATABASE_USER: ${PHOTOPRISM_MARIADB_USER}
      PHOTOPRISM_DATABASE_PASSWORD: ${PHOTOPRISM_MARIADB_PASSWORD}
      PHOTOPRISM_SITE_CAPTION: "Photos"
      PHOTOPRISM_SITE_DESCRIPTION: "Aventuras Fotográficas"
      PHOTOPRISM_FFMPEG_ENCODER: "intel"
      PHOTOPRISM_UID: ${PUID}
      PHOTOPRISM_GID: ${PGID}
    user: ${PUID}:${PGID}
    devices:
     - "/dev/dri:/dev/dri"
    working_dir: "/photoprism"
    volumes:
      - ~/backup:/photoprism/originals:ro
      - ${DATADIR}/photoprism/storage:/photoprism/storage

  photoprism-mariadb:
    image: mariadb:11
    container_name: photoprism-mariadb
    restart: unless-stopped
    stop_grace_period: 5s
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    volumes:
      - ${DATADIR}/photoprism-mariadb/mysql:/var/lib/mysql
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: ${PHOTOPRISM_MARIADB_DATABASE}
      MARIADB_USER: ${PHOTOPRISM_MARIADB_USER}
      MARIADB_PASSWORD: ${PHOTOPRISM_MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${PHOTOPRISM_MARIADB_ROOT_PASSWORD}

  gotify:
    image: gotify/server
    container_name: gotify
    ports:
      - 2323:80
    environment:
      GOTIFY_DEFAULTUSER_PASS: ${GOTIFY_DEFAULTUSER_PASS}
    volumes:
      - ${DATADIR}/gotify/data:/app/data

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      WATCHTOWER_POLL_INTERVAL: 86400
      WATCHTOWER_TIMEOUT: 60s
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: true
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_NO_STARTUP_MESSAGE: true
      WATCHTOWER_NOTIFICATIONS: gotify
      WATCHTOWER_NOTIFICATION_GOTIFY_URL: http://192.168.1.80:2323/
      WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN: /gotify_token
      TZ: ${TZ}
    depends_on:
      - gotify
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATADIR}/watchtower/gotify_token:/gotify_token

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    ports:
      - "8888:8080"
    volumes:
      - /run/udev:/run/udev:ro
      - ${DATADIR}/scrutiny/config:/config
      - ${DATADIR}/scrutiny-influxdb/config:/opt/scrutiny/influxdb
    devices:
      - /dev/sda
      - /dev/nvme0n1:/dev/nvme0n1

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATADIR}/uptime-kuma/data:/app/data
    depends_on:
      - gotify
    ports:
      - 3001:3001
    restart: always
