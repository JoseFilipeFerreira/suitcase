services:

  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION}
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync
    volumes:
      - ${MEDIADIR}/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      TZ: ${TZ}
      DB_HOSTNAME: immich-postgres
      REDIS_HOSTNAME: immich-redis
      DB_PASSWORD: ${IMMICH_DATABASE_PASSWORD}
      DB_USERNAME: ${IMMICH_DATABASE_USERNAME}
      DB_DATABASE_NAME: ${IMMICH_DATABASE_NAME}
    ports:
      - 2283:2283
    depends_on:
      - immich-redis
      - immich-postgres
      - immich-machine-learning
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION}-openvino
    extends:
      file: hwaccel.ml.yml
      service: openvino
    volumes:
      - ${DATADIR}/immich-machine-learning/cache:/cache
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich-redis
    image: docker.io/redis:6.2-alpine@sha256:e3b17ba9479deec4b7d1eeec1548a253acc5374d68d3b27937fcfe4df8d18c7e
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-postgres:
    container_name: immich-postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DATABASE_PASSWORD}
      POSTGRES_USER: ${IMMICH_DATABASE_USERNAME}
      POSTGRES_DB: ${IMMICH_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DATADIR}/immich-postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DATABASE_NAME}' --username='${IMMICH_DATABASE_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DATABASE_NAME}' --username='${IMMICH_DATABASE_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always

  immich-kiosk:
    image: damongolding/immich-kiosk
    container_name: immich-kiosk
    environment:
      TZ: ${TZ}
      KIOSK_IMMICH_URL: https://immich.${WEBSITE}
      KIOSK_IMMICH_API_KEY: ${KIOSK_IMMICH_API_KEY}
      KIOSK_PERSON: ${KIOSK_PERSON}
      KIOSK_SHOW_TIME: true
      KIOSK_SHOW_DATE: true
      KIOSK_REFRESH: 60
      KIOSK_DISABLE_SCREENSAVER: true
      KIOSK_HIDE_CURSOR: true
      KIOSK_SHOW_IMAGE_DATE: true
      KIOSK_SHOW_IMAGE_LOCATION: true
    restart: unless-stopped
    ports:
      - 3003:3000

  nextcloud-mariadb:
    image: mariadb:10.6
    container_name: nextcloud-mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: always
    volumes:
      - ${DATADIR}/nextcloud-mariadb:/var/lib/mysql:Z
    environment:
      MYSQL_ROOT_PASSWORD: ${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${NEXTCLOUD_MYSQL_DATABASE}
      MYSQL_USER: ${NEXTCLOUD_MYSQL_USER}
      MARIADB_AUTO_UPGRADE: 1
      MARIADB_DISABLE_UPGRADE_BACKUP: 1

  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: always

  nextcloud-cron:
    image: nextcloud:apache
    container_name: nextcloud-cron
    restart: always
    volumes:
      - ${DATADIR}/nextcloud:/var/www/html:z
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-mariadb
      - nextcloud-redis

  nextcloud:
    image: nextcloud:apache
    container_name: nextcloud
    restart: always
    ports:
      - 8085:80
    volumes:
      - ${DATADIR}/nextcloud:/var/www/html:z
    environment:
      TZ: ${TZ}
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${NEXTCLOUD_MYSQL_DATABASE}
      MYSQL_USER: ${NEXTCLOUD_MYSQL_USER}
      MYSQL_HOST: nextcloud-mariadb
      REDIS_HOST: nextcloud-redis
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.${WEBSITE}
      OVERWRITECLIURL: https://cloud.${WEBSITE}
      OVERWRITEPROTOCOL: https
    depends_on:
      - nextcloud-mariadb
      - nextcloud-redis

  actual-server:
    image: actualbudget/actual-server:latest
    container_name: actual-server
    restart: unless-stopped
    ports:
      - '5006:5006'
    volumes:
      - ${DATADIR}/actual-server/data:/data

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    network_mode: host
    privileged: true
    depends_on:
      - homeassistant-openwakeword
      - homeassistant-whisper
      - homeassistant-piper
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ${DATADIR}/homeassistant/config:/config
      - /run/dbus:/run/dbus:ro


  homeassistant-piper:
    image: rhasspy/wyoming-piper
    container_name: homeassistant-piper
    volumes:
      - ${DATADIR}/homeassistant-piper/data:/data
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --voice en_US-lessac-medium
    ports:
      - 10200:10200

  homeassistant-whisper:
    image: rhasspy/wyoming-whisper
    container_name: homeassistant-whisper
    volumes:
      - ${DATADIR}/homeassistant-whisper/data:/data
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --model base-int8 --language pt # tiny base small medium large

    ports:
      - 10300:10300

  homeassistant-openwakeword:
    image: rhasspy/wyoming-openwakeword
    container_name: homeassistant-openwakeword
    volumes:
      - ${DATADIR}/homeassistant-openwakeword/config:/config
      - ${DATADIR}/homeassistant-openwakeword/data:/data
      - ${DATADIR}/homeassistant-openwakeword/custom:/custom
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    command: --preload-model 'hey_jarvis' --custom-model-dir /custom
    ports:
      - 10400:10400

  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - ${DATADIR}/homer/assets:/www/assets
    ports:
      - 8084:8080
    user: ${PUID}:${PGID}

  mapper:
    image: josefilipeferreira/mapper
    container_name: mapper
    environment:
      IMAGE_RATIO: 1.6
    volumes:
      - ${DATADIR}/mapper/cache:/cache
      - ${DATADIR}/mapper/export:/export
      - ${MEDIADIR}/backup:/images:ro

  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    environment:
      WG_HOST: vpn.${WEBSITE}
      PASSWORD_HASH: ${WG_EASY_PASSWORD_HASH}
      UI_TRAFFIC_STATS: true
      UI_CHART_TYPE: 1
      UI_ENABLE_SORT_CLIENTS: true
    volumes:
      - ${DATADIR}/wg-easy/config:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  qbittorrent:
    image: linuxserver/qbittorrent:4.5.2
    container_name: qbittorrent
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      WEBUI_PORT: 8090
    volumes:
      - ${MEDIADIR}:/media
      - ${DLDIR}:/downloads
      - ${DATADIR}/qbittorrent/config:/config
    ports:
      - 8090:8090
      - 65432:65432
      - 65432:65432/udp
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      VERSION: docker
    group_add:
      - "989"
    network_mode: host
    volumes:
      - ~/.local/share/music:/music
      - ${MEDIADIR}:/media
      - ${DATADIR}/jellyfin/cache:/cache
      - ${DATADIR}/jellyfin/config:/config
    depends_on:
      - gotify
    restart: unless-stopped

  jellystat-postgres:
    image: postgres:15.2
    container_name: jellystat-postgres
    environment:
      POSTGRES_DB: 'jfstat'
      POSTGRES_USER: ${JELLYSTAT_DB_USER}
      POSTGRES_PASSWORD: ${JELLYSTAT_DB_PASSWORD}
    volumes:
      - ${DATADIR}/jellystat-postgres/data:/var/lib/postgresql/data
    restart: unless-stopped

  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    environment:
      POSTGRES_USER: ${JELLYSTAT_DB_USER}
      POSTGRES_PASSWORD: ${JELLYSTAT_DB_PASSWORD}
      POSTGRES_IP: jellystat-postgres
      POSTGRES_PORT: 5432
      JWT_SECRET: ${JELLYSTAT_JWT_SECRET}
      TZ: ${TZ}
    ports:
      - "3000:3000"
    volumes:
      - ${DATADIR}/jellystat/data:/app/backend/backup-data
    depends_on:
      - jellystat-postgres
      - jellyfin
    restart: unless-stopped

  iron-cake:
    image: josefilipeferreira/iron-cake
    container_name: iron-cake
    ports:
      - "8000:8000"
    volumes:
      - ${DATADIR}/iron-cake/thumb:/thumb
      - ${DATADIR}/mapper/export:/map:ro
      - ${MEDIADIR}/anime:/anime:ro
      - ~/.local/share/music:/music:ro
      - ~/.local/share/wallpapers:/walls:ro
      - ~/repos/receitas/receitas:/receitas:ro
      - ~/share:/share:ro
    restart: unless-stopped

  jbb:
    image: josefilipeferreira/jbb.py
    container_name: jbb
    volumes:
      - ${DATADIR}/jbb/config.yaml:/config.yaml
      - ${DATADIR}/jbb/db:/db
      - ${DATADIR}/jbb/media:/media
      - ${DATADIR}/jbb/music:/music
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr
    container_name: flaresolverr
    environment:
      TZ: ${TZ}
    ports:
      - 8191:8191
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DATADIR}/prowlarr/config:/config
    ports:
      - 9696:9696
    depends_on:
      - flaresolverr
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: 022 #optional
    volumes:
      - ${MEDIADIR}:/media
      - ${DLDIR}:/downloads
      - ${DATADIR}/sonarr/config:/config
    ports:
      - 8989:8989
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${MEDIADIR}/movies:/movies
      - ${DLDIR}:/downloads
      - ${DATADIR}/radarr/config:/config
    ports:
      - 7878:7878
    depends_on:
      - prowlarr
      - qbittorrent
    restart: unless-stopped

  calibre-web:
    image: linuxserver/calibre-web:nightly
    container_name: calibre-web
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      DOCKER_MODS: linuxserver/mods:universal-calibre
      OAUTHLIB_RELAX_TOKEN_SCOPE: 1
    volumes:
      - ${DATADIR}/calibre-web/config:/config
      - ${DATADIR}/calibre/config/Calibre Library:/books
    ports:
      - 8083:8083
    depends_on:
      - calibre
    restart: unless-stopped

  calibre:
    image: linuxserver/calibre:latest
    container_name: calibre
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${DATADIR}/calibre/config:/config
      - ${DATADIR}/calibre/import:/import
    ports:
      - 8082:8080
      - 8081:8081
    restart: unless-stopped

  stirling-pdf:
    image: frooodle/s-pdf:latest
    container_name: stirling-pdf
    ports:
      - 9091:8080
    volumes:
      - ${DATADIR}/stirling-pdf/trainingData:/usr/share/tesseract-ocr/5/tessdata
      - ${DATADIR}/stirling-pdf/configs:/configs
    environment:
      DOCKER_ENABLE_SECURITY: false
      SYSTEM_ROOTURIPATH: /pdf

  gotify:
    image: gotify/server
    container_name: gotify
    ports:
      - 2323:80
    environment:
      GOTIFY_DEFAULTUSER_PASS: ${GOTIFY_DEFAULTUSER_PASS}
    volumes:
      - ${DATADIR}/gotify/data:/app/data

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      WATCHTOWER_POLL_INTERVAL: 86400
      WATCHTOWER_TIMEOUT: 60s
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: true
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_NO_STARTUP_MESSAGE: true
      WATCHTOWER_NOTIFICATIONS: gotify
      WATCHTOWER_NOTIFICATION_GOTIFY_URL: http://192.168.1.80:2323/
      WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN: /gotify_token
      TZ: ${TZ}
    depends_on:
      - gotify
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATADIR}/watchtower/gotify_token:/gotify_token

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    ports:
      - 8888:8080
    volumes:
      - /run/udev:/run/udev:ro
      - ${DATADIR}/scrutiny/config:/config
      - ${DATADIR}/scrutiny-influxdb/config:/opt/scrutiny/influxdb
    devices:
      - /dev/sda
      - /dev/sdb
      - /dev/nvme0n1
